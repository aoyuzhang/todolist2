{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","id","type","defaultChecked","completed","htmlFor","name","Form","onSubmit","e","preventDefault","addTask","autoComplete","FilterButton","aria-pressed","App","taskList","tasks","map","task","alert","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAEe,SAASA,EAAKC,GAC3B,OACE,qBAAIC,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOC,GAAKF,EAAME,GAAIC,KAAK,WAAWC,eAAgBJ,EAAMK,YAC5D,uBAAOJ,UAAU,aAAaK,QAASN,EAAME,GAA7C,SACGF,EAAMO,UAGX,sBAAKN,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMO,UAEhD,yBAAQJ,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMO,gBCd3C,SAASC,EAAKR,GAM3B,OACE,uBAAMS,SANR,SAAsBC,GACpBA,EAAEC,iBACFX,EAAMY,QAAQ,eAId,UACE,oBAAIX,UAAU,gBAAd,SACE,uBAAOK,QAAQ,iBAAiBL,UAAU,YAA1C,sCAIF,uBACEE,KAAK,OACLD,GAAG,iBACHD,UAAU,kBACVM,KAAK,OACLM,aAAa,QAEf,wBAAQV,KAAK,SAASF,UAAU,2BAAhC,oBCpBS,SAASa,EAAad,GACnC,OACE,yBAAQG,KAAK,SAASF,UAAU,iBAAiBc,eAAa,OAA9D,UACE,sBAAMd,UAAU,kBAAhB,mBACA,uCACA,sBAAMA,UAAU,kBAAhB,uBCmCSe,MArCf,SAAahB,GAIX,IAAMiB,EAAWjB,EAAMkB,MAAMC,KAAI,SAAAC,GAAI,OAClC,cAACrB,EAAD,CACCG,GAAIkB,EAAKlB,GACTK,KAAMa,EAAKb,KACXF,UAAWe,EAAKf,WACTe,EAAKlB,OAKhB,OACE,sBAAKD,UAAU,sBAAf,UACE,2CACE,cAACO,EAAD,CAAMI,QAhBZ,SAAiBL,GACfc,MAAMd,MAgBJ,sBAAKN,UAAU,oCAAf,UACE,cAACa,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,OAEF,oBAAIZ,GAAG,eAAP,+BAGA,oBACEoB,KAAK,OACLrB,UAAU,wCACVsB,kBAAgB,eAHlB,SAKGN,QCxBMO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKjB,MARI,CACX,CAAEhB,GAAI,SAAUK,KAAM,MAAOF,WAAW,GACxC,CAAEH,GAAI,SAAUK,KAAM,QAASF,WAAW,GAC1C,CAAEH,GAAI,SAAUK,KAAM,SAAUF,WAAW,QAO3C+B,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f5c539a1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Todo(props){\n  return (\n    <li className=\"todo stack-small\">\n      <div className=\"c-cb\">\n        <input id= {props.id} type=\"checkbox\" defaultChecked={props.completed} />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\">\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button type=\"button\" className=\"btn btn__danger\">\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </li>\n\n  );\n}\n","import React from 'react'\n\nexport default function Form(props){\n  function handleSubmit(e){\n    e.preventDefault();\n    props.addTask(\"Say hello!\");\n  }\n\n  return (\n    <form onSubmit = {handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\n\nexport default function FilterButton(props){\n  return (\n    <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\n      <span className=\"visually-hidden\">Show </span>\n      <span>all</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  )\n}\n","import React from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction App(props) {\n  function addTask(name){\n    alert(name);\n  }\n  const taskList = props.tasks.map(task =>\n    (<Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key = {task.id}\n    />));\n\n\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n        <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">\n        3 tasks remaining\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}