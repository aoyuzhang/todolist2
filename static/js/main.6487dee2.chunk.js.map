{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","id","type","defaultChecked","htmlFor","name","App","autoComplete","aria-pressed","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAEe,SAASA,EAAKC,GAC3B,OACE,qBAAIC,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOC,GAAG,SAASC,KAAK,WAAWC,gBAAgB,IACnD,uBAAOH,UAAU,aAAaI,QAAQ,SAAtC,SACGL,EAAMM,UAGX,sBAAKL,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMM,UAEhD,yBAAQH,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMM,gBCyC3CC,MAtDf,SAAaP,GACX,OACE,sBAAKC,UAAU,sBAAf,UACE,2CACA,iCACE,oBAAIA,UAAU,gBAAd,SACE,uBAAOI,QAAQ,iBAAiBJ,UAAU,YAA1C,sCAIF,uBACEE,KAAK,OACLD,GAAG,iBACHD,UAAU,kBACVK,KAAK,OACLE,aAAa,QAEf,wBAAQL,KAAK,SAASF,UAAU,2BAAhC,oBAIF,sBAAKA,UAAU,oCAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,iBAAiBQ,eAAa,OAA9D,UACE,sBAAMR,UAAU,kBAAhB,mBACA,uCACA,sBAAMA,UAAU,kBAAhB,uBAEF,yBAAQE,KAAK,SAASF,UAAU,iBAAiBQ,eAAa,QAA9D,UACE,sBAAMR,UAAU,kBAAhB,mBACA,0CACA,sBAAMA,UAAU,kBAAhB,uBAEF,yBAAQE,KAAK,SAASF,UAAU,iBAAiBQ,eAAa,QAA9D,UACE,sBAAMR,UAAU,kBAAhB,mBACA,6CACA,sBAAMA,UAAU,kBAAhB,0BAGJ,oBAAIC,GAAG,eAAP,+BAGA,qBACEQ,KAAK,OACLT,UAAU,wCACVU,kBAAgB,eAHlB,UAKE,cAACZ,EAAD,CAAMO,KAAK,QACX,cAACP,EAAD,CAAMO,KAAK,UACX,cAACP,EAAD,CAAMO,KAAK,kBCvCJM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6487dee2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Todo(props){\n  return (\n    <li className=\"todo stack-small\">\n      <div className=\"c-cb\">\n        <input id=\"todo-0\" type=\"checkbox\" defaultChecked={true} />\n        <label className=\"todo-label\" htmlFor=\"todo-0\">\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\">\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button type=\"button\" className=\"btn btn__danger\">\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </li>\n\n  );\n}\n","import React from 'react';\nimport Todo from \"./components/Todo\";\n\nfunction App(props) {\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <form>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form>\n      <div className=\"filters btn-group stack-exception\">\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\n          <span className=\"visually-hidden\">Show </span>\n          <span>all</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\n          <span className=\"visually-hidden\">Show </span>\n          <span>Active</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\n          <span className=\"visually-hidden\">Show </span>\n          <span>Completed</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n      </div>\n      <h2 id=\"list-heading\">\n        3 tasks remaining\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        <Todo name=\"Eat\"/>\n        <Todo name=\"Sleep\"/>\n        <Todo name=\"Repeat\"/>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}